// <auto-generated />
using System;
using CodeFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirst.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirst.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdClient");

                    b.ToTable("clients");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Address = "123 Main St",
                            Email = "client1@example.com",
                            IsDeleted = false,
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            IdClient = 2,
                            Address = "456 Elm St",
                            Email = "client2@example.com",
                            IsDeleted = false,
                            PhoneNumber = "9876543210"
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.Contract", b =>
                {
                    b.Property<int>("IdContract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContract"));

                    b.Property<DateOnly>("DateFrom")
                        .HasColumnType("date");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdSoftware")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdContract");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdSoftware");

                    b.ToTable("contracts");

                    b.HasData(
                        new
                        {
                            IdContract = 1,
                            DateFrom = new DateOnly(2024, 6, 23),
                            IdClient = 1,
                            IdSoftware = 1,
                            Name = "Contract1",
                            Price = 1000m
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.CorporateClient", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("CorpoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("KRS")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("IdClient");

                    b.ToTable("corporate_clients");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            CorpoName = "Corp1",
                            KRS = 123456789m
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.Discount", b =>
                {
                    b.Property<int>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscount"));

                    b.Property<int>("Amt")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateFrom")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateTo")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Offer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDiscount");

                    b.ToTable("discounts");

                    b.HasData(
                        new
                        {
                            IdDiscount = 1,
                            Amt = 10,
                            DateFrom = new DateOnly(2024, 6, 23),
                            DateTo = new DateOnly(2024, 7, 23),
                            Name = "Discount1",
                            Offer = "Offer1"
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.Ledger", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayment"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdContract")
                        .HasColumnType("int");

                    b.HasKey("IdPayment");

                    b.HasIndex("IdContract");

                    b.ToTable("ledgers");

                    b.HasData(
                        new
                        {
                            IdPayment = 1,
                            AmountPaid = 500m,
                            IdContract = 1
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.OneTimePayment", b =>
                {
                    b.Property<int>("IdContract")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateTo")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatePeriod")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdContract");

                    b.ToTable("one_time_payments");

                    b.HasData(
                        new
                        {
                            IdContract = 1,
                            DateTo = new DateOnly(2025, 6, 23),
                            Status = "Active",
                            UpdatePeriod = 12,
                            Version = "1.0"
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.PersonalClient", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PESEL")
                        .HasColumnType("decimal(11,0)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.ToTable("personal_clients");

                    b.HasData(
                        new
                        {
                            IdClient = 2,
                            Name = "John",
                            PESEL = 89012345678m,
                            Surname = "Doe"
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.Software", b =>
                {
                    b.Property<int>("IdSoftware")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSoftware"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdSoftware");

                    b.ToTable("softwares");

                    b.HasData(
                        new
                        {
                            IdSoftware = 1,
                            Description = "Description1",
                            Name = "Software1",
                            Type = "Type1",
                            Version = "1.0"
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.Subscription", b =>
                {
                    b.Property<int>("IdContract")
                        .HasColumnType("int");

                    b.Property<int>("RenevalTimeInMonths")
                        .HasColumnType("int");

                    b.HasKey("IdContract");

                    b.ToTable("subscriptions");

                    b.HasData(
                        new
                        {
                            IdContract = 1,
                            RenevalTimeInMonths = 12
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "240be518fabd2724ddb6f04eeb1da5967448d7e831c08c8fa822809f74c720a9",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "e606e38b0d8c19b24cf0ee3808183162ea7cd63ff7912dbb22b5e803286b4446",
                            Role = "User",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("CodeFirst.Models.Contract", b =>
                {
                    b.HasOne("CodeFirst.Models.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirst.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("IdSoftware")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("CodeFirst.Models.CorporateClient", b =>
                {
                    b.HasOne("CodeFirst.Models.Client", "Client")
                        .WithOne("CorporateClient")
                        .HasForeignKey("CodeFirst.Models.CorporateClient", "IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CodeFirst.Models.Ledger", b =>
                {
                    b.HasOne("CodeFirst.Models.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("IdContract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("CodeFirst.Models.OneTimePayment", b =>
                {
                    b.HasOne("CodeFirst.Models.Contract", "Contract")
                        .WithOne("OneTimePayment")
                        .HasForeignKey("CodeFirst.Models.OneTimePayment", "IdContract")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("CodeFirst.Models.PersonalClient", b =>
                {
                    b.HasOne("CodeFirst.Models.Client", "Client")
                        .WithOne("PersonalClient")
                        .HasForeignKey("CodeFirst.Models.PersonalClient", "IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CodeFirst.Models.Subscription", b =>
                {
                    b.HasOne("CodeFirst.Models.Contract", "Contract")
                        .WithOne("Subscription")
                        .HasForeignKey("CodeFirst.Models.Subscription", "IdContract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("CodeFirst.Models.Client", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("CorporateClient")
                        .IsRequired();

                    b.Navigation("PersonalClient")
                        .IsRequired();
                });

            modelBuilder.Entity("CodeFirst.Models.Contract", b =>
                {
                    b.Navigation("OneTimePayment")
                        .IsRequired();

                    b.Navigation("Subscription")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
